name: Master Repo CI/CD

on:
  push:
    branches:
      - main

jobs:
  update-submodules:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Set up SSH key for submodule access
      - name: SSH Agent Setup
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 2: Checkout the master repository and submodules
      - name: Checkout Master Repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'  # Clone submodules recursively
          fetch-depth: 0           # Fetch all history for accurate submodule checkout

      # Step 3: Update submodules with the latest changes
      - name: Update Submodules
        run: |
          git submodule update --remote --merge
          git add .
          git commit -m "Updated submodules" || echo "No changes to commit"

  build-and-push:
    needs: update-submodules
    runs-on: ubuntu-latest
    env:
      ECR_REPO: "<account-id>.dkr.ecr.<region>.amazonaws.com"
    steps:
      # Step 1: Set up SSH key for submodule access
      - name: SSH Agent Setup
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 2: Checkout the master repository again (including submodules)
      - name: Checkout Master Repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'  # Clone submodules recursively
          fetch-depth: 0           # Fetch all history for accurate submodule checkout

      # Step 3: Build Backend Docker Image
      - name: Build Backend Docker Image
        run: |
          docker build -t ${ECR_REPO}/backend-api:latest ./backend-api
          docker push ${ECR_REPO}/backend-api:latest

      # Step 4: Build Frontend Docker Image
      - name: Build Frontend Docker Image
        run: |
          docker build -t ${ECR_REPO}/frontend-ui:latest ./frontend-ui
          docker push ${ECR_REPO}/frontend-ui:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # Step 1: Deploy Backend API to EKS
      - name: Deploy to EKS - Backend API
        run: |
          helm upgrade --install backend-api ./deployment/backend \
            --set image.repository=${{ env.ECR_REPO }}/backend-api \
            --set image.tag=latest

      # Step 2: Deploy Frontend UI to EKS
      - name: Deploy to EKS - Frontend UI
        run: |
          helm upgrade --install frontend-ui ./deployment/frontend \
            --set image.repository=${{ env.ECR_REPO }}/frontend-ui \
            --set image.tag=latest
